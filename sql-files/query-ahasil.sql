/* 친가 부계 찾기 */
SELECT LEVEL, H.HID AS HID, H.NAME AS NAME, H.PID AS PID, P.FHID AS FHID, P.MHID AS MHID
    FROM HUMAN H LEFT OUTER JOIN PARENTS P ON (H.PID = P.PID)
    START WITH HID = (SELECT HH.HID FROM HUMAN HH WHERE HH.NAME = '여자')
    CONNECT BY NOCYCLE PRIOR FHID = HID OR (FHID IS NULL AND PRIOR MHID = HID);

/* 외가 부계 찾기 */
SELECT LEVEL, H.HID AS HID, H.NAME AS NAME, H.PID AS PID, P.FHID AS FHID, P.MHID AS MHID
    FROM HUMAN H LEFT OUTER JOIN PARENTS P ON (H.PID = P.PID)
    START WITH HID = (
        SELECT P.MHID
            FROM HUMAN HH, PARENTS P
            WHERE HH.NAME = '여자' AND HH.PID = P.PID
    )
    CONNECT BY NOCYCLE PRIOR FHID = HID OR (FHID IS NULL AND PRIOR MHID = HID);

/* 배우자 찾기 */
WITH TEMP_MATE_HID AS (
    SELECT H.HID AS HID, H.NAME AS NAME, H.SEX, MATE_P.PID AS MATE_P_PID,
            CASE MATE_P.FHID WHEN H.HID THEN MATE_P.MHID ELSE MATE_P.FHID END MATE_HID
        FROM HUMAN H LEFT OUTER JOIN PARENTS MATE_P ON (H.HID = MATE_P.FHID OR H.HID = MATE_P.MHID)
        WHERE H.NAME = '아버지'
)
SELECT TMH.*, MH.NAME AS MATE_NAME, MH.SEX AS MATE_SEX
    FROM TEMP_MATE_HID TMH LEFT OUTER JOIN HUMAN MH ON (TMH.MATE_HID = MH.HID);
